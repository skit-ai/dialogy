- description: "test people, date and time entities."
  input: "I need 4 people on 27th next month. Can I have it at 5 am"
  mock_entity_json: [{'body': '4 people',
    'start': 7,
    'value': {'value': 4, 'type': 'value', 'unit': 'person'},
    'end': 15,
    'dim': 'people',
    'latent': False},
     {'body': 'on 27th next month',
      'start': 16,
      'value': {'values': [{'value': '2021-05-27T00:00:00.000+05:30',
         'grain': 'day',
         'type': 'value'}],
       'value': '2021-05-27T00:00:00.000+05:30',
       'grain': 'day',
       'type': 'value'},
      'end': 34,
      'dim': 'time',
      'latent': False},
     {'body': 'at 5 am',
      'start': 50,
      'value': {'values': [{'value': '2021-04-16T05:00:00.000+05:30',
         'grain': 'hour',
         'type': 'value'},
        {'value': '2021-04-17T05:00:00.000+05:30',
         'grain': 'hour',
         'type': 'value'},
        {'value': '2021-04-18T05:00:00.000+05:30',
         'grain': 'hour',
         'type': 'value'}],
       'value': '2021-04-16T05:00:00.000+05:30',
       'grain': 'hour',
       'type': 'value'},
      'end': 57,
      'dim': 'time',
      'latent': False}]
  duckling:
    dimensions: ["people", "time", "date", "duration"]
    locale: "en_IN"
    timezone: "Asia/Kolkata"
  expected: [{"entity": "PeopleEntity"}, {"entity": "TimeEntity"}, {"entity": "TimeEntity"}]

- description: "test time interval."
  input: "between 2 to 4 am"
  duckling:
    dimensions: ["people", "time", "date", "duration"]
    locale: "en_IN"
    timezone: "Asia/Kolkata"
  mock_entity_json: [{'body': 'between 2 to 4 am',
  'start': 0,
  'value': {'values': [{'type': 'interval'},
    {'type': 'interval'},
    {'type': 'interval'}],
   'type': 'interval'},
  'end': 17,
  'dim': 'time',
  'latent': False}]
  exception: "TypeError"

- description: "people entity with a missing value."
  input: "3 people"
  duckling:
    dimensions: ["people", "time", "date", "duration"]
    locale: "en_IN"
    timezone: "Asia/Kolkata"
  mock_entity_json: [{
    "body": "3 people",
    "start": 67,
    "end": 75,
    "dim": "people",
    "latent": False
  }]
  exception: "KeyError"

- description: "numerical entity test"
  input: "4 items"
  duckling:
    dimensions: ["people", "time", "date", "duration"]
    locale: "en_IN"
    timezone: "Asia/Kolkata"
  mock_entity_json: [{'body': 'four',
  'start': 0,
  'value': {'value': 4, 'type': 'value'},
  'end': 4,
  'dim': 'number',
  'latent': False}]
  expected: [{"entity": "NumericalEntity"}]

- description: "numerical entity test with a list of strings"
  input: ["4 items", "four items"]
  duckling:
    dimensions: ["people", "time", "date", "duration"]
    locale: "en_IN"
    timezone: "Asia/Kolkata"
  mock_entity_json: [{'body': 'four',
  'start': 0,
  'value': {'value': 4, 'type': 'value'},
  'end': 4,
  'dim': 'number',
  'latent': False}]
  expected: [{"entity": "NumericalEntity"}, {"entity": "NumericalEntity"}]

- description: "test time entity."
  input: "27th next month"
  duckling:
    dimensions: ["people", "time", "date", "duration"]
    locale: "en_IN"
    timezone: "Asia/Kolkata"
  mock_entity_json: [{'body': '27th next month',
  'start': 0,
  'value': {'values': [{'value': '2021-05-27T00:00:00.000+05:30',
     'grain': 'day',
     'type': 'value'}],
   'value': '2021-05-27T00:00:00.000+05:30',
   'grain': 'day',
   'type': 'value'},
  'end': 15,
  'dim': 'time',
  'latent': False}]
  expected: [{"entity": "TimeEntity"}]

- description: "test time interval."
  input: "between 2 to 4 am"
  duckling:
    dimensions: ["people", "time", "date", "duration"]
    locale: "en_IN"
    timezone: "Asia/Kolkata"
  mock_entity_json: [{'body': 'between 2 to 4 am',
  'start': 0,
  'value': {'values': [{'to': {'value': '2021-04-16T05:00:00.000+05:30',
      'grain': 'hour'},
     'from': {'value': '2021-04-16T02:00:00.000+05:30', 'grain': 'hour'},
     'type': 'interval'},
    {'to': {'value': '2021-04-17T05:00:00.000+05:30', 'grain': 'hour'},
     'from': {'value': '2021-04-17T02:00:00.000+05:30', 'grain': 'hour'},
     'type': 'interval'},
    {'to': {'value': '2021-04-18T05:00:00.000+05:30', 'grain': 'hour'},
     'from': {'value': '2021-04-18T02:00:00.000+05:30', 'grain': 'hour'},
     'type': 'interval'}],
   'to': {'value': '2021-04-16T05:00:00.000+05:30', 'grain': 'hour'},
   'from': {'value': '2021-04-16T02:00:00.000+05:30', 'grain': 'hour'},
   'type': 'interval'},
  'end': 17,
  'dim': 'time',
  'latent': False}]
  expected: [{"entity": "TimeIntervalEntity"}]

- description: "time interval entity with only from value."
  input: "from 4 am"
  duckling:
    dimensions: ["people", "time", "date", "duration"]
    locale: "en_IN"
    timezone: "Asia/Kolkata"
  mock_entity_json: [{'body': 'from 4 am',
  'start': 0,
  'value': {'values': [{'from': {'value': '2021-04-16T04:00:00.000+05:30',
      'grain': 'hour'},
     'type': 'interval'},
    {'from': {'value': '2021-04-17T04:00:00.000+05:30', 'grain': 'hour'},
     'type': 'interval'},
    {'from': {'value': '2021-04-18T04:00:00.000+05:30', 'grain': 'hour'},
     'type': 'interval'}],
   'from': {'value': '2021-04-16T04:00:00.000+05:30', 'grain': 'hour'},
   'type': 'interval'},
  'end': 9,
  'dim': 'time',
  'latent': False}]
  expected: [{"entity": "TimeIntervalEntity"}]

- description: "time interval entity with only to value"
  input: "till 2 pm"
  duckling:
    dimensions: ["people", "time", "date", "duration"]
    locale: "en_IN"
    timezone: "Asia/Kolkata"
  mock_entity_json: [{'body': 'till 2 am',
  'start': 0,
  'value': {'values': [{'to': {'value': '2021-04-17T02:00:00.000+05:30',
      'grain': 'hour'},
     'type': 'interval'},
    {'to': {'value': '2021-04-18T02:00:00.000+05:30', 'grain': 'hour'},
     'type': 'interval'},
    {'to': {'value': '2021-04-19T02:00:00.000+05:30', 'grain': 'hour'},
     'type': 'interval'}],
   'to': {'value': '2021-04-17T02:00:00.000+05:30', 'grain': 'hour'},
   'type': 'interval'},
  'end': 9,
  'dim': 'time',
  'latent': False}]
  expected: [{"entity":"TimeIntervalEntity"}]

- description: "duration entity"
  input: "2 hours"
  duckling:
    dimensions: ["people", "time", "date", "duration"]
    locale: "en_IN"
    timezone: "Asia/Kolkata"
  mock_entity_json: [{'body': '2 hours',
  'start': 0,
  'value': {'value': 2,
   'hour': 2,
   'type': 'value',
   'unit': 'hour',
   'normalized': {'value': 7200, 'unit': 'second'}},
  'end': 7,
  'dim': 'duration',
  'latent': False}]
  expected: [{"entity": "DurationEntity"}]

- description: "no entity found."
  input: "there is no spoon"
  duckling:
    dimensions: ["people", "time", "date", "duration"]
    locale: "en_IN"
    timezone: "Asia/Kolkata"
  mock_entity_json: []
  expected: []

- description: "no entity found."
  input: "there is no spoon"
  duckling:
    dimensions: ["people"]
    locale: "en_IN"
    timezone: "Asia/Kolkata"
  mock_entity_json: []
  exception: "ValueError"
  response_code: 500

- description: "invalid inputs"
  input: 42 #, None, {"key", 42}, [12]
  duckling:
    dimensions: ["people"]
    locale: "en_IN"
    timezone: "Asia/Kolkata"
  mock_entity_json: []
  exception: "TypeError"

- description: "invalid inputs"
  input: 42
  duckling:
    dimensions: ["people"]
    locale: "en_IN"
    timezone: "Asia/Kolkata"
  mock_entity_json: []
  exception: "TypeError"

- description: "invalid inputs"
  input: {"key", 42}
  duckling:
    dimensions: ["people"]
    locale: "en_IN"
    timezone: "Asia/Kolkata"
  mock_entity_json: []
  exception: "TypeError"

- description: "invalid inputs"
  input: 12
  duckling:
    dimensions: ["people"]
    locale: "en_IN"
    timezone: "Asia/Kolkata"
  mock_entity_json: []
  exception: "TypeError"

- description: "Invalid dimensions"
  input: "3 foobars"
  duckling:
    locale: "en_IN"
    dimensions: ["unknown"]
    timezone: "Asia/Kolkata"
  mock_entity_json: [{
    "body": "3 foobars",
    "start": 67,
    "value": {"value": 3, "type": "foobar", "unit": "person"},
    "end": 75,
    "dim": "number",
    "latent": False,
  }]
  exception: "NotImplementedError"

- description: "Incorrect timezone"
  input: "i need it at 5 am"
  duckling:
    locale: "en_IN"
    dimensions: ["time"]
    timezone: "Earth/Someplace"
  mock_entity_json: [{}]
  exception: "UnknownTimeZoneError"

- description: "Duckling API failure simulator (response_code=500)"
  input: "27th next month"
  duckling:
    dimensions: ["time"]
    locale: "en_IN"
    timezone: "Asia/Kolkata"
  mock_entity_json: [{
      "body": "on 27th next month",
      "start": 21,
      "value": {
          "values": [
              {
                  "value": "2021-01-27T00:00:00.000-08:00",
                  "grain": "day",
                  "type": "value",
              }
          ],
          "value": "2021-01-27T00:00:00.000-08:00",
          "grain": "day",
          "type": "value",
      },
      "end": 39,
      "dim": "time",
      "latent": False,
  }]
  response_code: 500
  exception: "ValueError"

- description: "hindi date"
  input: "5 नवंबर"
  duckling:
    locale: "hi_IN"
    dimensions: ["people", "time", "date", "duration"]
    timezone: "Asia/Kolkata"
  mock_entity_json: [{'body': '5 नवंबर',
  'start': 0,
  'value': {'values': [{'value': '2021-11-05T00:00:00.000+05:30',
     'grain': 'day',
     'type': 'value'}],
   'value': '2021-11-05T00:00:00.000+05:30',
   'grain': 'day',
   'type': 'value'},
  'end': 7,
  'dim': 'time',
  'latent': False}]
  expected: [{"entity": "TimeEntity"}]

- description: "Filter out future dates only."
  input: ""
  duckling:
    locale: "hi_IN"
    dimensions: ["time", "date"]
    timezone: "Asia/Kolkata"
    datetime_filters: "future"
    debug: True
  mock_entity_json: [{
    'body': 'परसो शाम 5 बजे',
    'dim': 'time',
    'latent': False,
    'end': 23,
    'start': 9,
    'value': {
      'values': [{
        'grain': 'hour',
        'type': 'value',
        'value': '2021-05-31T17:00:00.000+05:30'
      }],
      'grain': 'hour',
      'type': 'value',
      'value': '2021-05-31T17:00:00.000+05:30'
    }
  },{
    'body': 'परसो शाम 5 बजे',
    'dim': 'time',
    'latent': False,
    'end': 23,
    'start': 9,
    'value': {
      'values': [{
        'grain': 'hour',
        'type': 'value',
        'value': '2021-06-04T17:00:00.000+05:30'}
      ],
      'grain': 'hour',
      'type': 'value',
      'value': '2021-06-04T17:00:00.000+05:30'
    }
  }]
  reference_time: '2021-06-02T18:51:11.000+05:30'
  expected: [{"entity": "TimeEntity"}]

- description: "Exceptions due to incorrect date filter name."
  input: ""
  duckling:
    locale: "hi_IN"
    dimensions: ["time", "date"]
    timezone: "Asia/Kolkata"
    datetime_filters: "latest"
    debug: True
  mock_entity_json: [{
    'body': 'परसो शाम 5 बजे',
    'dim': 'time',
    'latent': False,
    'end': 23,
    'start': 9,
    'value': {
      'values': [{
        'grain': 'hour',
        'type': 'value',
        'value': '2021-05-31T17:00:00.000+05:30'
      }],
      'grain': 'hour',
      'type': 'value',
      'value': '2021-05-31T17:00:00.000+05:30'
    }
  },{
    'body': 'परसो शाम 5 बजे',
    'dim': 'time',
    'latent': False,
    'end': 23,
    'start': 9,
    'value': {
      'values': [{
        'grain': 'hour',
        'type': 'value',
        'value': '2021-06-04T17:00:00.000+05:30'}
      ],
      'grain': 'hour',
      'type': 'value',
      'value': '2021-06-04T17:00:00.000+05:30'
    }
  }]
  reference_time: '2021-06-02T18:51:11.000+05:30'
  exception: "ValueError"

- description: "Exceptions due to incorrect date filter type."
  input: ""
  duckling:
    locale: "hi_IN"
    dimensions: ["time", "date"]
    timezone: "Asia/Kolkata"
    datetime_filters: 12
    debug: True
  mock_entity_json: [{
    'body': 'परसो शाम 5 बजे',
    'dim': 'time',
    'latent': False,
    'end': 23,
    'start': 9,
    'value': {
      'values': [{
        'grain': 'hour',
        'type': 'value',
        'value': '2021-05-31T17:00:00.000+05:30'
      }],
      'grain': 'hour',
      'type': 'value',
      'value': '2021-05-31T17:00:00.000+05:30'
    }
  },{
    'body': 'परसो शाम 5 बजे',
    'dim': 'time',
    'latent': False,
    'end': 23,
    'start': 9,
    'value': {
      'values': [{
        'grain': 'hour',
        'type': 'value',
        'value': '2021-06-04T17:00:00.000+05:30'}
      ],
      'grain': 'hour',
      'type': 'value',
      'value': '2021-06-04T17:00:00.000+05:30'
    }
  }]
  reference_time: '2021-06-02T18:51:11.000+05:30'
  exception: "TypeError"
